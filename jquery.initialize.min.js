(function($){"use strict";var MutationSelectorObserver=function(selector,callback,options){this.selector=selector;this.callback=callback;this.options=options};var mtypes=["childList","attributes"];var msobservers=[];msobservers.initialize=function(selector,callback,options){var seen=[];var callbackOnce=function(){if(seen.indexOf(this)==-1){seen.push(this);$(this).each(callback)}};$(selector).each(callbackOnce);this.push(new MutationSelectorObserver(selector,callbackOnce,options))};var observer=new MutationObserver(function(mutations){for(var j=0;j<msobservers.length;j++){if(msobservers[j].options.scanDocument){$(msobservers[j].selector).each(msobservers[j].callback)}else{for(var m=0;m<mutations.length;m++){if($.inArray(mutations[m].type,mtypes)!=-1){for(var n=0;n<mutations[m].addedNodes.length;n++){$(mutations[m].addedNodes[n]).find(msobservers[j].selector).addBack(msobservers[j].selector).each(msobservers[j].callback)}}}}}});observer.observe(document.documentElement,{childList:true,subtree:true,attributes:true});$.fn.initialize=function(callback,options){msobservers.initialize(this.selector,callback,$.extend({},$.initialize.defaults,options))};$.initialize=function(selector,callback,options){msobservers.initialize(selector,callback,$.extend({},$.initialize.defaults,options))};$.initialize.defaults={scanDocument:true}})(jQuery);
